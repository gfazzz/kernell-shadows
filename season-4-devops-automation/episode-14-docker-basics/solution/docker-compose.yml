# KERNEL SHADOWS: Episode 14 â€” Docker Basics
# Docker Compose configuration for Operation Shadow
# Amsterdam, Netherlands (Day 27-28)
# Sophie van Dijk, Docker Architect

version: '3.8'

services:
  # Nginx web server
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: operation-shadow/web:latest
    container_name: shadow-web
    ports:
      - "8080:80"
    networks:
      - shadow-network
    volumes:
      - web-logs:/var/log/nginx
      - ./html:/usr/share/nginx/html:ro  # Read-only mount
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    labels:
      - "com.operation-shadow.episode=14"
      - "com.operation-shadow.location=Amsterdam"
      - "com.operation-shadow.service=web"

  # Optional: Database (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: shadow-db
    networks:
      - shadow-network
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=operation_shadow
      - POSTGRES_USER=shadow_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shadow_user -d operation_shadow"]
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "com.operation-shadow.episode=14"
      - "com.operation-shadow.service=database"

  # Optional: Redis cache
  cache:
    image: redis:7-alpine
    container_name: shadow-cache
    networks:
      - shadow-network
    volumes:
      - cache-data:/data
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-default_password}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      - "com.operation-shadow.episode=14"
      - "com.operation-shadow.service=cache"

  # Optional: Monitoring (Grafana)
  monitoring:
    image: grafana/grafana:latest
    container_name: shadow-monitoring
    ports:
      - "3000:3000"
    networks:
      - shadow-network
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    secrets:
      - grafana_password
    restart: unless-stopped
    depends_on:
      - web
    labels:
      - "com.operation-shadow.episode=14"
      - "com.operation-shadow.service=monitoring"

# Networks
networks:
  shadow-network:
    driver: bridge
    name: operation-shadow-network
    ipam:
      config:
        - subnet: 172.28.0.0/16

# Volumes (persistent data)
volumes:
  web-logs:
    name: shadow-web-logs
  db-data:
    name: shadow-db-data
  cache-data:
    name: shadow-cache-data
  grafana-data:
    name: shadow-grafana-data

# Secrets (for sensitive data)
secrets:
  db_password:
    file: ./secrets/db_password.txt
  grafana_password:
    file: ./secrets/grafana_password.txt


