# KERNEL SHADOWS: Episode 14 — Docker Basics
# Nginx configuration for Operation Shadow web server
# Simplified version with TODO comments

# TODO 1: Укажи пользователя nginx
# Подсказка: user nginx;
# Nginx worker processes будут запущены от этого пользователя
user ???;

# TODO 2: Укажи количество worker processes
# Подсказка: worker_processes auto;
# auto — автоматически определит количество CPU cores
worker_processes ???;

# TODO 3: Настрой путь к error log
# Подсказка: error_log /var/log/nginx/error.log warn;
# warn — логировать warnings и errors (не info)
error_log ??? ???;

# TODO 4: Укажи путь к PID файлу
# Подсказка: pid /var/run/nginx.pid;
pid ???;

events {
    # TODO 5: Укажи максимальное количество соединений на worker
    # Подсказка: worker_connections 1024;
    # 1024 — стандартное значение (можно больше для production)
    worker_connections ???;
}

http {
    # TODO 6: Подключи MIME types
    # Подсказка: include /etc/nginx/mime.types;
    # MIME types определяют как браузер интерпретирует файлы (.html, .css, .js)
    include ???;

    # TODO 7: Укажи default MIME type
    # Подсказка: default_type application/octet-stream;
    default_type ???;

    # TODO 8: Настрой access log
    # Подсказка: access_log /var/log/nginx/access.log;
    access_log ???;

    # TODO 9: Включи sendfile
    # Подсказка: sendfile on;
    # Оптимизация: использует kernel для отправки файлов (быстрее)
    sendfile ???;

    # TODO 10: Установи keepalive timeout
    # Подсказка: keepalive_timeout 65;
    # Время жизни keep-alive соединения (в секундах)
    keepalive_timeout ???;

    # ========================================================================
    # Main Server Block
    # ========================================================================
    server {
        # TODO 11: Укажи порт для прослушивания
        # Подсказка: listen 80;
        listen ???;

        # TODO 12: Укажи server name
        # Подсказка: server_name localhost;
        server_name ???;

        # TODO 13: Укажи document root
        # Подсказка: root /usr/share/nginx/html;
        # Директория с веб-файлами (index.html, images, css, js)
        root ???;

        # TODO 14: Укажи index файлы
        # Подсказка: index index.html index.htm;
        index ??? ???;

        # ====================================================================
        # Main Location
        # ====================================================================
        # TODO 15: Настрой main location
        # Подсказка:
        # location / {
        #     try_files $uri $uri/ =404;
        # }
        #
        # try_files — пытается найти файл, директорию, иначе 404
        location / {
            try_files ??? ??? =???;
        }

        # ====================================================================
        # Health Check Endpoint
        # ====================================================================
        # TODO 16: Создай health check endpoint
        # Подсказка:
        # location /health {
        #     access_log off;
        #     return 200 "healthy\n";
        #     add_header Content-Type text/plain;
        # }
        #
        # Healthcheck для Docker HEALTHCHECK и мониторинга
        location /health {
            access_log ???;
            return ??? "???\n";
            add_header Content-Type ???;
        }

        # ====================================================================
        # Error Pages
        # ====================================================================
        # TODO 17: Настрой error pages
        # Подсказка: error_page 404 /404.html;
        error_page ??? /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}

# ============================================================================
# СПРАВКА: Основные директивы Nginx
#
# user — пользователь для worker processes
# worker_processes — количество worker processes (обычно = CPU cores)
# worker_connections — макс соединений на worker
# sendfile — оптимизация отправки файлов
# keepalive_timeout — время жизни keep-alive соединения
# listen — порт для прослушивания
# server_name — hostname сервера
# root — корневая директория для файлов
# location — обработка URL путей
# try_files — попытка найти файл перед возвратом ошибки
#
# ============================================================================
# ВОПРОСЫ ДЛЯ ПОНИМАНИЯ:
#
# 1. Зачем worker_processes auto?
#    → Автоматически определяет количество CPU cores
#    → Оптимальное использование многоядерных систем
#
# 2. Что делает sendfile on?
#    → Использует kernel для отправки файлов (быстрее чем read/write)
#    → Снижает нагрузку на CPU
#
# 3. Зачем keepalive_timeout?
#    → Держит TCP соединение открытым для нескольких HTTP запросов
#    → Экономит время на новых TCP handshakes
#
# 4. Что делает try_files $uri $uri/ =404?
#    → Сначала ищет файл ($uri)
#    → Потом директорию ($uri/)
#    → Если не нашёл — возвращает 404
#
# 5. Зачем /health endpoint?
#    → Docker HEALTHCHECK проверяет доступность
#    → Мониторинг (Prometheus, Kubernetes) проверяет здоровье
#    → access_log off — не засоряет логи частыми проверками
#
# ============================================================================
# Sophie: "Nginx config — это как конфигурирование роутера. 
#          Каждая location — правило маршрутизации."
# ============================================================================

