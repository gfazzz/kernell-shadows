# KERNEL SHADOWS: Episode 15 — GitHub Actions (Deploy)
# Continuous Deployment Pipeline
# Berlin, Germany (Day 29-30)

name: CD - Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - production
      version:
        description: 'Docker image tag'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
      url: ${{ github.event.inputs.environment == 'production' && 'https://operation-shadow.net' || 'https://staging.operation-shadow.net' }}

    steps:
      - name: Checkout deployment scripts
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          chmod +x scripts/deploy.sh
          ./scripts/deploy.sh \
            --environment ${{ github.event.inputs.environment }} \
            --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }} \
            --server ${{ secrets.DEPLOY_SERVER }}

      - name: Health check
        run: |
          sleep 10
          HEALTH_URL="${{ github.event.inputs.environment == 'production' && 'https://operation-shadow.net' || 'https://staging.operation-shadow.net' }}/health"
          curl -f $HEALTH_URL || exit 1
          echo "✓ Health check passed"

      - name: Deployment summary
        run: |
          echo "========================================="
          echo "DEPLOYMENT REPORT"
          echo "========================================="
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}"
          echo "Server: ${{ secrets.DEPLOY_SERVER }}"
          echo "Status: ✅ DEPLOYED"
          echo "========================================="

  rollback:
    name: Rollback (manual trigger)
    runs-on: ubuntu-latest
    if: failure()
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout deployment scripts
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Rollback deployment
        run: |
          chmod +x scripts/rollback.sh
          ./scripts/rollback.sh --server ${{ secrets.DEPLOY_SERVER }}

      - name: Rollback summary
        run: echo "⚠️  Rolled back to previous version"


