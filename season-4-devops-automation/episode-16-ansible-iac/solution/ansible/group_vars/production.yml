---
# KERNEL SHADOWS: Episode 16 — Ansible & Infrastructure as Code
# Production-specific Variables
# Amsterdam → Berlin (Day 31-32)

################################################################################
# Production Environment Configuration
################################################################################

environment: production
datacenter: tempelhof

################################################################################
# Application Configuration
################################################################################

app_name: operation-shadow
app_version: "1.0.0"
app_image: operation-shadow/app
docker_registry: registry.operation-shadow.net

# Database
app_database_name: operation_shadow_prod
app_database_user: shadow_app
app_database_password: "{{ vault_database_password }}"  # From Ansible Vault

# Redis
redis_maxmemory: "2gb"
redis_maxmemory_policy: "allkeys-lru"

################################################################################
# Infrastructure Scaling
################################################################################

web_servers_count: 10
app_servers_count: 28
database_servers_count: 5
cache_servers_count: 5

################################################################################
# SSL/TLS Configuration
################################################################################

ssl_enabled: yes
ssl_certificate_path: /etc/ssl/certs/operation-shadow.crt
ssl_certificate_key_path: /etc/ssl/private/operation-shadow.key
ssl_protocols:
  - TLSv1.2
  - TLSv1.3

################################################################################
# Nginx Configuration
################################################################################

nginx_worker_processes: auto
nginx_worker_connections: 4096
nginx_keepalive_timeout: 65
nginx_client_max_body_size: "50m"
nginx_gzip: yes
nginx_gzip_types:
  - text/plain
  - text/css
  - text/javascript
  - application/javascript
  - application/json
  - application/xml

################################################################################
# PostgreSQL Configuration
################################################################################

postgres_max_connections: 200
postgres_shared_buffers: "256MB"
postgres_effective_cache_size: "1GB"
postgres_work_mem: "4MB"
postgres_maintenance_work_mem: "64MB"

# Backup configuration
postgres_backup_enabled: yes
postgres_backup_schedule: "0 2 * * *"  # Daily at 2 AM
postgres_backup_retention_days: 30

################################################################################
# Docker Configuration
################################################################################

docker_version: "24.0"
docker_compose_version: "2.20"
docker_storage_driver: overlay2
docker_log_driver: json-file
docker_log_max_size: "10m"
docker_log_max_file: "3"

# Docker network
docker_network_name: operation-shadow-network
docker_network_subnet: "172.28.0.0/16"

################################################################################
# Monitoring Configuration
################################################################################

# Prometheus
prometheus_retention_time: "30d"
prometheus_scrape_interval: "15s"
prometheus_evaluation_interval: "15s"

# Grafana
grafana_admin_user: admin
grafana_admin_password: "{{ vault_grafana_password }}"  # From Ansible Vault
grafana_port: 3000

# Alerting
alertmanager_enabled: yes
alert_email: ops@operation-shadow.net
alert_slack_webhook: "{{ vault_slack_webhook }}"

################################################################################
# Resource Limits
################################################################################

# System limits
max_open_files: 65536
max_processes: 4096

# Memory limits per service
service_memory_limits:
  nginx: "512M"
  postgres: "2G"
  redis: "2G"
  app: "1G"

################################################################################
# Maintenance Windows
################################################################################

# Allowed maintenance window (UTC)
maintenance_window_start: "02:00"
maintenance_window_end: "04:00"
maintenance_days:
  - sunday

################################################################################
# Compliance & Security
################################################################################

# Audit logging
audit_enabled: yes
audit_log_path: /var/log/audit

# GDPR compliance
gdpr_enabled: yes
data_retention_days: 365

# Security scanning
security_scan_enabled: yes
vulnerability_scan_schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM

################################################################################
# Performance Tuning
################################################################################

# Kernel parameters
sysctl_settings:
  net.core.somaxconn: 4096
  net.ipv4.tcp_max_syn_backlog: 8192
  net.ipv4.ip_local_port_range: "10000 65000"
  net.ipv4.tcp_tw_reuse: 1
  fs.file-max: 65536
  vm.swappiness: 10

################################################################################
# Klaus's Production Philosophy:
#
# "Production is not staging. Production values must be:
#  1. Secure (encrypted secrets via Ansible Vault)
#  2. Scalable (handle 10x current load)
#  3. Monitored (alerts before users notice)
#  4. Backed up (restore in < 15 minutes)
#  5. Documented (this file)
#
#  Change management:
#    1. Test in staging first
#    2. Deploy during maintenance window
#    3. Canary deployment (5% → 50% → 100%)
#    4. Rollback plan ready
#
#  That's how you run production. That's how you sleep at night."
################################################################################


