[Unit]
# KERNEL SHADOWS: Episode 10 — System Monitoring Service
# Saint Petersburg, Russia — Boris Kuznetsov's SystemD Architecture
#
# TODO 1: Добавь Description для monitoring service
# Подсказка: Description=KERNEL SHADOWS System Monitor
Description=???

# TODO 2: Добавь документацию
# Подсказка: Documentation=https://github.com/kernel-shadows/episode-10
Documentation=???

# TODO 3: Настрой зависимости (After/Wants)
# Подсказка: После сети (network-online.target) и журналирования (systemd-journald.service)
After=???
Wants=???

# TODO 4: Добавь требование наличия journald
# Подсказка: Requires=systemd-journald.service
# Мониторинг должен писать в journal, поэтому требуем его наличие
Requires=???
After=systemd-journald.service

[Service]
# ============================================================================
# Service Configuration
# ============================================================================

# TODO 5: Выбери тип сервиса
# Подсказка: Type=simple
# simple — для долго работающих процессов (мониторинг работает постоянно)
# oneshot — для задач которые выполняются и завершаются
Type=???

# TODO 6: Укажи непривилегированного пользователя
# Подсказка: User=shadow-monitor, Group=shadow-monitor
# SECURITY: Не используй root если не нужно!
# Создать пользователя: sudo useradd -r -s /bin/false shadow-monitor
User=???
Group=???

# TODO 7: Укажи рабочую директорию
# Подсказка: WorkingDirectory=/var/operations/shadow-monitor
WorkingDirectory=???

# ============================================================================
# Main Command
# ============================================================================

# TODO 8: Укажи команду для мониторинга
# Подсказка: ExecStart=/usr/local/bin/shadow-monitor.sh
ExecStart=???

# TODO 9: Добавь pre-checks
# Подсказка: Проверь существование и исполняемость скрипта
# ExecStartPre=/usr/bin/test -f /usr/local/bin/shadow-monitor.sh
# ExecStartPre=/usr/bin/test -x /usr/local/bin/shadow-monitor.sh
ExecStartPre=???
ExecStartPre=???

# TODO 10: Добавь post-stop logging
# Подсказка: ExecStopPost=/usr/bin/logger -t shadow-monitor "Monitoring service stopped"
ExecStopPost=???

# ============================================================================
# Restart Policy
# ============================================================================

# TODO 11: Настрой автоперезапуск при падении
# Подсказка: Restart=on-failure
# on-failure — перезапускать только при ошибке
# always — перезапускать всегда (даже при нормальном завершении)
# no — не перезапускать
Restart=???

# TODO 12: Установи задержку перед перезапуском
# Подсказка: RestartSec=10s
# Ждём 10 секунд перед перезапуском (предотвращает быстрый restart loop)
RestartSec=???

# TODO 13: Ограничь количество перезапусков
# Подсказка: StartLimitBurst=5, StartLimitIntervalSec=60s
# Максимум 5 перезапусков за 60 секунд (после этого systemd сдаётся)
StartLimitBurst=???
StartLimitIntervalSec=???

# ============================================================================
# Resource Limits (prevent resource exhaustion)
# ============================================================================

# TODO 14: Ограничь CPU (25% одного ядра)
# Подсказка: CPUQuota=25%
# Мониторинг не должен перегружать систему
CPUQuota=???

# TODO 15: Ограничь память (128MB)
# Подсказка: MemoryLimit=128M, MemoryMax=128M
# Мониторинг должен быть легковесным
MemoryLimit=???
MemoryMax=???

# TODO 16: Ограничь количество процессов/потоков
# Подсказка: TasksMax=50
TasksMax=???

# TODO 17: Ограничь открытые файлы
# Подсказка: LimitNOFILE=1024
LimitNOFILE=???

# ============================================================================
# Security Hardening (systemd security features)
# ============================================================================

# TODO 18: Запрети повышение привилегий
# Подсказка: NoNewPrivileges=true
# Процесс не сможет получить больше привилегий (например, через suid бинарники)
NoNewPrivileges=???

# TODO 19: Включи приватный /tmp
# Подсказка: PrivateTmp=true
# Изолирует временные файлы от других процессов
PrivateTmp=???

# TODO 20: Защити kernel модули
# Подсказка: ProtectKernelModules=true
# Запрещает загрузку/выгрузку kernel модулей (предотвращает rootkits)
ProtectKernelModules=???

# TODO 21: Защити kernel логи
# Подсказка: ProtectKernelLogs=true
# Запрещает доступ к dmesg
ProtectKernelLogs=???

# TODO 22: Защити kernel tunables
# Подсказка: ProtectKernelTunables=true
# Запрещает доступ к /proc/kcore, /proc/kallsyms
ProtectKernelTunables=???

# TODO 23: Защити домашние директории
# Подсказка: ProtectHome=true
# Запрещает доступ к /home, /root, /run/user
ProtectHome=???

# TODO 24: Защити control groups
# Подсказка: ProtectControlGroups=true
# Запрещает доступ к /sys
ProtectControlGroups=???

# TODO 25: Настрой видимость процессов
# Подсказка: ProtectProc=invisible, ProcSubset=pid
# Скрывает процессы других пользователей
ProtectProc=???
ProcSubset=???

# ============================================================================
# Logging
# ============================================================================

# TODO 26: Настрой вывод в journal
# Подсказка: StandardOutput=journal, StandardError=journal
StandardOutput=???
StandardError=???

# TODO 27: Установи идентификатор для syslog
# Подсказка: SyslogIdentifier=shadow-monitor
SyslogIdentifier=???

# ============================================================================
# Environment Variables
# ============================================================================

# TODO 28: Добавь environment переменные
# Подсказка: Environment="LOG_LEVEL=INFO"
# Подсказка: Environment="ALERT_THRESHOLD=5"
Environment="LOG_LEVEL=???"
Environment="ALERT_THRESHOLD=???"

# TODO 29: Подключи конфиг файл с переменными (опционально)
# Подсказка: EnvironmentFile=-/etc/shadow-monitor/monitor.conf
# "-" prefix = не падать если файла нет
EnvironmentFile=???

[Install]
# TODO 30: Добавь в цель для автозапуска
# Подсказка: WantedBy=multi-user.target
# multi-user.target — стандартная цель для системных сервисов
WantedBy=???

# ============================================================================
# СПРАВКА: Как использовать после заполнения TODO
#
# 1. Создать пользователя:
#    sudo useradd -r -s /bin/false shadow-monitor
#    sudo mkdir -p /var/operations/shadow-monitor
#    sudo chown shadow-monitor:shadow-monitor /var/operations/shadow-monitor
#
# 2. Скопировать в systemd:
#    sudo cp shadow-monitor.service /etc/systemd/system/
#
# 3. Reload systemd:
#    sudo systemctl daemon-reload
#
# 4. Enable (автозапуск при загрузке):
#    sudo systemctl enable shadow-monitor.service
#
# 5. Start сейчас:
#    sudo systemctl start shadow-monitor.service
#
# 6. Проверка статуса:
#    sudo systemctl status shadow-monitor.service
#
# 7. Просмотр логов (real-time):
#    sudo journalctl -u shadow-monitor.service -f
#
# 8. Остановка:
#    sudo systemctl stop shadow-monitor.service
#
# 9. Отключить автозапуск:
#    sudo systemctl disable shadow-monitor.service
#
# ============================================================================
# ВОПРОСЫ ДЛЯ ПОНИМАНИЯ:
#
# 1. Почему Type=simple, а не Type=oneshot?
#    → simple для долго работающих процессов (monitoring, web server)
#    → oneshot для задач которые завершаются (backup, maintenance)
#
# 2. Зачем User=shadow-monitor, а не User=root?
#    → SECURITY! Принцип наименьших привилегий
#    → Если сервис скомпрометирован, атакующий получит ограниченные права
#
# 3. Что делает NoNewPrivileges=true?
#    → Запрещает процессу получить больше привилегий
#    → Предотвращает атаки через suid бинарники
#
# 4. Зачем ProtectHome=true?
#    → Мониторинг не должен читать домашние директории пользователей
#    → Снижает риск утечки данных при компрометации
#
# 5. Почему CPUQuota=25%, а не 100%?
#    → Мониторинг не должен перегружать систему
#    → Оставляем ресурсы для production сервисов
#
# 6. Что делает Restart=on-failure?
#    → Автоматически перезапускает сервис при падении
#    → НЕ перезапускает при нормальном завершении (systemctl stop)
#
# 7. Зачем StartLimitBurst=5?
#    → Ограничивает бесконечные рестарты
#    → Если сервис упал 5 раз за минуту — что-то серьёзно сломано
#
# 8. Что делает PrivateTmp=true?
#    → Каждый сервис получает свой /tmp
#    → Предотвращает атаки через временные файлы
#
# ============================================================================
# SECURITY BEST PRACTICES
#
# ✓ Всегда используй непривилегированного пользователя (не root!)
# ✓ Ограничивай ресурсы (CPU, Memory, Tasks)
# ✓ Включай security features (NoNewPrivileges, ProtectHome, ProtectKernel*)
# ✓ Настраивай автоперезапуск (Restart=on-failure)
# ✓ Ограничивай количество перезапусков (StartLimitBurst)
# ✓ Логируй в journal (StandardOutput=journal)
# ✓ Используй EnvironmentFile для конфигов (не хардкодь в .service)
#
# ============================================================================
# SystemD Security Features — Полная шпаргалка
#
# NoNewPrivileges=true
#   → Запрещает повышение привилегий
#
# PrivateTmp=true
#   → Приватный /tmp для сервиса
#
# ProtectSystem=strict
#   → Read-only root filesystem
#   → Можно писать только в /var, /tmp, /run
#
# ProtectHome=true
#   → Запрещает доступ к /home, /root, /run/user
#
# ProtectKernelModules=true
#   → Запрещает загрузку kernel модулей
#
# ProtectKernelLogs=true
#   → Запрещает доступ к dmesg
#
# ProtectKernelTunables=true
#   → Запрещает изменение kernel параметров
#
# ProtectControlGroups=true
#   → Запрещает доступ к /sys
#
# RestrictAddressFamilies=AF_INET AF_INET6
#   → Ограничивает типы сетевых соединений
#
# RestrictRealtime=true
#   → Запрещает realtime scheduling
#
# RestrictNamespaces=true
#   → Запрещает создание namespaces
#
# LockPersonality=true
#   → Запрещает изменение execution domain
#
# MemoryDenyWriteExecute=true
#   → Запрещает W^X (write XOR execute)
#   → Предотвращает code injection
#
# SystemCallFilter=@system-service
#   → Разрешает только безопасные syscalls
#
# Борис: "Security layering. Каждая опция — дополнительный барьер.
#         Если атакующий обходит одну защиту, есть ещё десять."
#
# ============================================================================
# Борис Kuznetsov: "SystemD unit = production-ready service.
#                   Resource limits, security hardening, auto-restart.
#                   That's enterprise-grade monitoring."
# ============================================================================

