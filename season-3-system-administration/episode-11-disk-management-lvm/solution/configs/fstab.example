# KERNEL SHADOWS: Episode 11 — /etc/fstab Example Configuration
# LVM Logical Volumes — Automated Mounting at Boot
#
# This is an EXAMPLE of how to configure /etc/fstab for LVM logical volumes.
# DO NOT copy-paste directly to /etc/fstab without understanding!
#
# Format: <device> <mount point> <type> <options> <dump> <pass>
#
# ============================================================================
# IMPORTANT: Always use UUID instead of device paths for production!
# ============================================================================
# Why UUID?
# - Device paths (/dev/vg_data/lv_databases) can change if you rename VG/LV
# - UUID is filesystem-specific and never changes
# - More reliable for critical systems
#
# Find UUID:
#   sudo blkid /dev/vg_data/lv_databases
#   sudo blkid /dev/vg_data/lv_logs
#
# ============================================================================
# Example entries for Episode 11 LVM setup:
# ============================================================================

# LV for Databases (XFS)
# UUID approach (RECOMMENDED):
UUID=a1b2c3d4-e5f6-4a5b-9c8d-7e6f5a4b3c2d  /mnt/databases  xfs  defaults,noatime,nofail  0  2

# Alternative device path (NOT recommended for production):
# /dev/vg_data/lv_databases  /mnt/databases  xfs  defaults,noatime  0  2

# ----------------------------------------------------------------------------

# LV for Logs (ext4)
UUID=f1e2d3c4-b5a6-4f5e-9d8c-7e6f5a4b3c2d  /mnt/logs  ext4  defaults,noatime,nofail  0  2

# ----------------------------------------------------------------------------

# LV for Backups (ext4)
UUID=c1d2e3f4-a5b6-4c5d-9e8f-7a6b5c4d3e2f  /mnt/backups  ext4  defaults,noatime,nofail  0  2

# ============================================================================
# Mount Options Explained:
# ============================================================================
#
# defaults:
#   - rw (read-write)
#   - suid (allow set-user-ID and set-group-ID bits)
#   - dev (interpret character/block devices)
#   - exec (allow executables)
#   - auto (mount automatically at boot)
#   - nouser (only root can mount)
#   - async (I/O async)
#
# noatime:
#   - Don't update access time when file is read
#   - PERFORMANCE BOOST: Reduces write operations (especially for databases!)
#   - Alternative: relatime (update atime only if mtime changed or atime > 1 day old)
#
# nofail:
#   - Don't fail boot if device is missing
#   - Useful for non-critical filesystems or external drives
#   - Boot will continue even if this filesystem can't mount
#   - CAUTION: May hide mounting errors!
#
# ============================================================================
# Dump & Pass Fields:
# ============================================================================
#
# <dump> (5th field):
#   0 = Don't dump (backup)
#   1 = Dump (rarely used nowadays)
#
# <pass> (6th field):
#   0 = Don't check filesystem with fsck at boot
#   1 = Check first (root filesystem only!)
#   2 = Check after root filesystem
#   Recommended: 2 for data filesystems
#
# ============================================================================
# Testing fstab BEFORE Reboot:
# ============================================================================
# CRITICAL: Always test fstab changes BEFORE rebooting!
#
# 1. Backup original:
#    sudo cp /etc/fstab /etc/fstab.backup.$(date +%Y%m%d)
#
# 2. Edit fstab:
#    sudo nano /etc/fstab
#
# 3. Unmount filesystems:
#    sudo umount /mnt/databases
#    sudo umount /mnt/logs
#    sudo umount /mnt/backups
#
# 4. Test mount -a (mount ALL from fstab):
#    sudo mount -a
#
# 5. Verify:
#    df -h | grep -E "databases|logs|backups"
#
# 6. If error → FIX fstab NOW! Don't reboot with broken fstab!
#
# ⚠️ Broken fstab can make system UNBOOTABLE!
# ⚠️ You may need physical access or rescue mode to fix!
#
# ============================================================================
# XFS vs ext4 Options:
# ============================================================================
#
# XFS (high-performance, large files):
#   - noatime (RECOMMENDED for databases)
#   - largeio (optimize for large sequential I/O)
#   - swalloc (allocate space for writes in large extents)
#   Example: defaults,noatime,largeio,swalloc
#
# ext4 (general purpose, stable):
#   - noatime (RECOMMENDED)
#   - data=ordered (default, good balance)
#   - data=writeback (faster, less safe)
#   - data=journal (slower, most safe)
#   Example: defaults,noatime,data=ordered
#
# ============================================================================
# Production Best Practices:
# ============================================================================
# 1. ✅ Use UUID (not device paths)
# 2. ✅ Use noatime for performance
# 3. ✅ Use nofail for non-critical filesystems
# 4. ✅ Always test with mount -a before reboot
# 5. ✅ Keep backup of working fstab
# 6. ✅ Document custom mount options
# 7. ⚠️ Never edit /etc/fstab without backup
# 8. ⚠️ Never reboot without testing mount -a
#
# ============================================================================
# Troubleshooting:
# ============================================================================
# If system won't boot due to fstab error:
#
# 1. Boot to rescue mode (GRUB menu → Advanced Options → Recovery Mode)
# 2. Mount root filesystem read-write:
#    mount -o remount,rw /
# 3. Edit /etc/fstab to fix error
# 4. Test:
#    mount -a
# 5. Reboot:
#    reboot
#
# ============================================================================

