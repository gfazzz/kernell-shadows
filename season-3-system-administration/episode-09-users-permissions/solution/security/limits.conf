# /etc/security/limits.conf — Ограничения ресурсов для пользователей
# Episode 09: Пользователи и права доступа
# Операция KERNEL SHADOWS
#
# Этот файл определяет limits (ограничения) на системные ресурсы для пользователей
# и групп. Используется модулем PAM pam_limits.so.
#
# Ментор: Андрей Волков, ЛЭТИ
# "Resource limits — это защита от DoS атак изнутри. Один пользователь не должен
#  съесть все ресурсы системы."

# ============================================================================
# ФОРМАТ ФАЙЛА
# ============================================================================

# <domain>  <type>  <item>  <value>
#
# domain:
#   - username       (конкретный пользователь)
#   - @groupname     (группа, символ @ обязателен)
#   - *              (все пользователи)
#
# type:
#   - soft           (мягкий лимит, пользователь может увеличить до hard)
#   - hard           (жёсткий лимит, нельзя превысить)
#   - -              (установить оба: soft и hard)
#
# item:
#   - nproc          (максимум процессов)
#   - nofile         (максимум открытых файлов)
#   - core           (размер core dump файла, 0 = отключить)
#   - fsize          (максимальный размер файла)
#   - cpu            (максимальное CPU время в минутах)
#   - as             (максимальный размер address space)
#   - memlock        (максимальный размер locked-in-memory)
#   - locks          (максимум file locks)
#   - sigpending     (максимум pending signals)
#   - msgqueue       (максимальная память для POSIX message queues)
#   - nice           (максимальное nice значение)
#   - rtprio         (максимальный realtime priority)
#   - maxlogins      (максимум одновременных входов)
#
# value:
#   - число          (лимит)
#   - unlimited      (без ограничений)

# ============================================================================
# СТАНДАРТНЫЕ НАСТРОЙКИ ДЛЯ ВСЕХ ПОЛЬЗОВАТЕЛЕЙ
# ============================================================================

# Максимум открытых файлов (file descriptors)
# По умолчанию в Linux: 1024 (мало для серверов)
*    soft    nofile    4096
*    hard    nofile    65536

# Максимум процессов на пользователя
# Защита от fork bomb (бесконечное создание процессов)
*    soft    nproc     2048
*    hard    nproc     4096

# Отключить core dumps по умолчанию (security)
# Core dump содержит память процесса — может содержать пароли, ключи, etc.
*    soft    core      0
*    hard    core      0

# ============================================================================
# ОПЕРАЦИОННАЯ КОМАНДА KERNEL SHADOWS
# ============================================================================

# Группа operations (Viktor, Dmitry) — базовые лимиты для операторов
@operations    soft    nproc      1000
@operations    hard    nproc      2000
@operations    soft    nofile     8192
@operations    hard    nofile     65536

# ============================================================================
# АЛЕКС СОКОЛОВ — СЕТЕВОЙ АДМИНИСТРАТОР
# ============================================================================

# Алексу нужны повышенные лимиты для:
#   - tcpdump (много открытых файлов)
#   - nmap сканирование (много процессов/соединений)
#   - network debugging

alex    soft    nofile    16384
alex    hard    nofile    65536
alex    soft    nproc     1500
alex    hard    nproc     3000

# Разрешить Алексу core dumps для отладки (если нужно)
# alex    soft    core      unlimited
# alex    hard    core      unlimited

# ============================================================================
# АННА КОВАЛЕВА — FORENSICS EXPERT
# ============================================================================

# Анне нужны умеренные лимиты (forensics = чтение логов, не много процессов)
anna    soft    nproc     500
anna    hard    nproc     1000
anna    soft    nofile    4096
anna    hard    nofile    16384

# Анне НЕ нужны core dumps (security, могут содержать чувствительную информацию)
anna    soft    core      0
anna    hard    core      0

# ============================================================================
# ДМИТРИЙ ОРЛОВ — DEVOPS ИНЖЕНЕР
# ============================================================================

# Дмитрию нужны высокие лимиты для:
#   - Docker (много контейнеров = много процессов)
#   - Мониторинг (много открытых файлов)
#   - Build процессы (компиляция)

dmitry    soft    nproc      2000
dmitry    hard    nproc      4000
dmitry    soft    nofile     16384
dmitry    hard    nofile     65536

# Дмитрию разрешить больший размер файлов (для Docker images, backups)
dmitry    soft    fsize      unlimited
dmitry    hard    fsize      unlimited

# ============================================================================
# ВИКТОР ПЕТРОВ — КООРДИНАТОР ОПЕРАЦИИ
# ============================================================================

# Виктору как координатору — стандартные серверные лимиты
viktor    soft    nproc      1500
viktor    hard    nproc      3000
viktor    soft    nofile     8192
viktor    hard    nofile     65536

# ============================================================================
# СПЕЦИАЛЬНЫЕ СЕРВИСНЫЕ АККАУНТЫ (если есть)
# ============================================================================

# nginx/apache web server (если используется отдельный пользователь)
# www-data    soft    nofile    65536
# www-data    hard    nofile    65536

# PostgreSQL/MySQL database
# postgres    soft    nofile    65536
# postgres    hard    nofile    65536
# postgres    soft    nproc     unlimited
# postgres    hard    nproc     unlimited

# Redis
# redis    soft    nofile    10032
# redis    hard    nofile    10032

# ============================================================================
# ROOT — БЕЗ ОГРАНИЧЕНИЙ
# ============================================================================

# Root должен иметь неограниченные ресурсы для критических операций
root    soft    nofile    unlimited
root    hard    nofile    unlimited
root    soft    nproc     unlimited
root    hard    nproc     unlimited

# ============================================================================
# КОММЕНТАРИИ ДЛЯ ПОНИМАНИЯ
# ============================================================================

# ЗАЧЕМ НУЖНЫ LIMITS?
#
# 1. Защита от DoS изнутри:
#    - Fork bomb: :(){ :|:& };:
#    - Без nproc limit пользователь может создать миллионы процессов
#    - Система станет неотзывчивой
#
# 2. Стабильность системы:
#    - Один пользователь не должен "съесть" все ресурсы
#    - Другие пользователи/сервисы продолжают работать
#
# 3. Безопасность:
#    - core dumps содержат память процесса (пароли, ключи)
#    - Отключение core = защита чувствительных данных

# ПРИМЕРЫ АТАК БЕЗ LIMITS:
#
# Fork bomb (создаёт процессы рекурсивно):
#   :(){ :|:& };:
#   Без nproc limit — система зависнет
#
# Заполнение диска:
#   dd if=/dev/zero of=bigfile bs=1G count=1000
#   Без fsize limit — заполнит весь диск
#
# Открыть все file descriptors:
#   while true; do cat /dev/random > /dev/null & done
#   Без nofile limit — исчерпает file descriptors

# ============================================================================
# УСТАНОВКА
# ============================================================================

# 1. Скопировать этот файл в /etc/security/
#    sudo cp limits.conf /etc/security/limits.conf

# 2. Права должны быть 644 (read-only для пользователей)
#    sudo chmod 644 /etc/security/limits.conf

# 3. Проверить что PAM настроен использовать limits
#    grep pam_limits.so /etc/pam.d/common-session
#    Должна быть строка:
#    session required pam_limits.so

# 4. Лимиты применяются при НОВОМ входе пользователя
#    Существующие сессии НЕ затронуты
#    Нужно logout/login или ssh reconnect

# ============================================================================
# ПРОВЕРКА ТЕКУЩИХ ЛИМИТОВ
# ============================================================================

# Посмотреть свои текущие лимиты:
#   ulimit -a

# Посмотреть лимиты конкретного процесса:
#   cat /proc/<PID>/limits

# Посмотреть soft nproc limit:
#   ulimit -u

# Посмотреть soft nofile limit:
#   ulimit -n

# Посмотреть hard limits:
#   ulimit -H -u    (hard nproc)
#   ulimit -H -n    (hard nofile)

# Проверить что лимиты применились для пользователя:
#   sudo -i -u alex
#   ulimit -a
#   # Должны быть лимиты как указано выше

# ============================================================================
# ИЗМЕНЕНИЕ ЛИМИТОВ В RUNTIME (для тестирования)
# ============================================================================

# Временно увеличить soft limit (до hard limit):
#   ulimit -n 10000           (nofile)
#   ulimit -u 3000            (nproc)

# НЕ МОЖЕШЬ превысить hard limit без root:
#   ulimit -n 100000          (если hard limit 65536 — ошибка)

# Root может увеличить hard limit:
#   sudo bash
#   ulimit -H -n 100000       (установить hard limit)
#   ulimit -n 100000          (установить soft limit)

# ============================================================================
# ТЕСТИРОВАНИЕ
# ============================================================================

# Тест 1: Проверить что лимиты применились для Алекса
#   sudo -i -u alex
#   ulimit -n    # Ожидается: 16384 (soft nofile)
#   ulimit -u    # Ожидается: 1500 (soft nproc)

# Тест 2: Проверить что Анна не может создать слишком много процессов
#   sudo -i -u anna
#   ulimit -u    # Ожидается: 500
#   # Попытка запустить 600 процессов должна провалиться

# Тест 3: Проверить что core dumps отключены
#   ulimit -c    # Ожидается: 0 (core disabled)

# Тест 4: Симуляция fork bomb (ОСТОРОЖНО!)
#   # НЕ ЗАПУСКАЙ на production!
#   # В тестовой VM:
#   ulimit -u 100      # Установить низкий лимит
#   :(){ :|:& };:       # Запустить fork bomb
#   # Должно остановиться на 100 процессах

# ============================================================================
# TROUBLESHOOTING
# ============================================================================

# Проблема: "Too many open files"
# Решение: Увеличить nofile limit
#   ulimit -n      (проверить текущий)
#   Изменить в limits.conf, logout/login

# Проблема: "Cannot fork: Resource temporarily unavailable"
# Решение: Увеличить nproc limit
#   ulimit -u      (проверить текущий)
#   Изменить в limits.conf, logout/login

# Проблема: Лимиты не применяются после изменения limits.conf
# Причины:
#   1. Не сделал logout/login (лимиты применяются при входе)
#   2. PAM не настроен (нет pam_limits.so в /etc/pam.d/common-session)
#   3. Синтаксическая ошибка в limits.conf

# Проверка:
#   sudo -i -u username
#   ulimit -a
#   # Если лимиты старые — проблема с применением

# ============================================================================
# БЕЗОПАСНОСТЬ
# ============================================================================

# ⚠️ ВАЖНЫЕ ЗАМЕЧАНИЯ:
#
# 1. Слишком низкие лимиты:
#    - Легитимные процессы могут не работать
#    - Пользователь не сможет нормально работать
#    - Баланс между безопасностью и юзабельностью
#
# 2. Слишком высокие лимиты:
#    - Защита от DoS атак ослабляется
#    - Один пользователь может "съесть" все ресурсы
#
# 3. Root без лимитов:
#    - Необходимо для критических операций
#    - НО: если root скомпрометирован — нет защиты
#    - Поэтому: защищай root аккаунт!
#
# 4. Core dumps:
#    - Полезны для отладки (содержат состояние памяти)
#    - НО: могут содержать пароли, ключи, sensitive data
#    - Решение: отключить по умолчанию, включить только для debug

# ============================================================================
# ССЫЛКИ
# ============================================================================

# man limits.conf     — документация по формату
# man pam_limits      — документация по PAM модулю
# man ulimit          — документация по команде ulimit

# Online:
#   https://linux.die.net/man/5/limits.conf
#   https://www.kernel.org/doc/Documentation/sysctl/kernel.txt

# ============================================================================
# ИСТОРИЯ ИЗМЕНЕНИЙ
# ============================================================================

# 2025-10-11: Создан Максом Соколовым под руководством Андрея Волкова
#             Операция KERNEL SHADOWS, Episode 09, Санкт-Петербург
#             Лимиты установлены для защиты от DoS атак изнутри

# End of configuration

