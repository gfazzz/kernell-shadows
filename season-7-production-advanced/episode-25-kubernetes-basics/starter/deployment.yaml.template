# EPISODE 25: Kubernetes Deployment Template
# Season 7: Production & Advanced Topics

# TODO: Complete this Deployment manifest for shadow-web application
#
# Requirements:
# - Name: shadow-web
# - Namespace: shadow-ops
# - Image: nginx:1.25-alpine
# - Replicas: 3
# - Container port: 80
# - Resource limits: CPU 500m, Memory 256Mi
# - Resource requests: CPU 250m, Memory 128Mi
# - Health checks: liveness + readiness probes

apiVersion: apps/v1
kind: Deployment
metadata:
  name: # TODO: deployment name
  namespace: # TODO: namespace name
  labels:
    app: # TODO: app label
spec:
  replicas: # TODO: how many pods?
  selector:
    matchLabels:
      app: # TODO: match deployment label
  template:
    metadata:
      labels:
        app: # TODO: pod label
    spec:
      containers:
      - name: nginx
        image: # TODO: nginx image with version
        ports:
        - containerPort: # TODO: container port
        resources:
          requests:
            cpu: # TODO: minimum CPU (e.g. "250m")
            memory: # TODO: minimum memory (e.g. "128Mi")
          limits:
            cpu: # TODO: maximum CPU (e.g. "500m")
            memory: # TODO: maximum memory (e.g. "256Mi")
        livenessProbe:
          httpGet:
            path: # TODO: health check path (e.g. "/")
            port: # TODO: container port
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: # TODO: health check path
            port: # TODO: container port
          initialDelaySeconds: 5
          periodSeconds: 3

# Hints:
# - Apply with: kubectl apply -f deployment.yaml
# - Check status: kubectl get deployments -n shadow-ops
# - Check pods: kubectl get pods -n shadow-ops
# - Describe: kubectl describe deployment shadow-web -n shadow-ops
# - Logs: kubectl logs <pod-name> -n shadow-ops

