#!/bin/bash
# Episode 17: Security Auditing — Auto-tests
# Проверка выполнения задания

set -euo pipefail

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

PASSED=0
FAILED=0

echo "============================================"
echo "Episode 17: Security Auditing — Tests"
echo "============================================"
echo

# Helper functions
pass() {
    echo -e "${GREEN}✓${NC} $1"
    ((PASSED++))
}

fail() {
    echo -e "${RED}✗${NC} $1"
    ((FAILED++))
}

warn() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Test 1: Check installed tools
echo "Test 1: Проверка установленных инструментов"
echo "-------------------------------------------"

if command -v lynis &> /dev/null; then
    pass "lynis установлен"
else
    fail "lynis НЕ установлен (apt install lynis)"
fi

if command -v nmap &> /dev/null; then
    pass "nmap установлен"
else
    fail "nmap НЕ установлен (apt install nmap)"
fi

if command -v aide &> /dev/null; then
    pass "AIDE установлен"
else
    fail "AIDE НЕ установлен (apt install aide)"
fi

if command -v fail2ban-client &> /dev/null; then
    pass "fail2ban установлен"
else
    fail "fail2ban НЕ установлен (apt install fail2ban)"
fi

echo

# Test 2: Check AIDE
echo "Test 2: Проверка AIDE"
echo "-------------------------------------------"

if [ -f /var/lib/aide/aide.db ]; then
    pass "AIDE database инициализирован"
else
    fail "AIDE database НЕ инициализирован (sudo aideinit)"
fi

if systemctl is-enabled aide-check.timer &> /dev/null; then
    pass "AIDE systemd timer включен"
else
    warn "AIDE systemd timer НЕ включен (необязательно)"
fi

echo

# Test 3: Check fail2ban
echo "Test 3: Проверка fail2ban"
echo "-------------------------------------------"

if systemctl is-active --quiet fail2ban; then
    pass "fail2ban активен"
else
    fail "fail2ban НЕ активен (sudo systemctl start fail2ban)"
fi

if [ -f /etc/fail2ban/jail.local ]; then
    pass "fail2ban jail.local существует"
else
    warn "fail2ban jail.local НЕ найден (рекомендуется создать)"
fi

if systemctl is-active --quiet fail2ban; then
    if sudo fail2ban-client status sshd &> /dev/null; then
        pass "fail2ban SSH jail активен"
    else
        warn "fail2ban SSH jail НЕ активен"
    fi
fi

echo

# Test 4: Check report files
echo "Test 4: Проверка отчётов"
echo "-------------------------------------------"

REPORT_FOUND=false

# Check common locations
if [ -f ~/audit-report.md ] || [ -f ~/episode17-FINAL-REPORT.md ]; then
    pass "Финальный отчёт найден в домашней директории"
    REPORT_FOUND=true
elif [ -f ./audit-report.md ]; then
    pass "Финальный отчёт найден в текущей директории"
    REPORT_FOUND=true
fi

if [ "$REPORT_FOUND" = false ]; then
    fail "Финальный отчёт НЕ найден (audit-report.md)"
fi

# Check for audit results
if [ -f ~/lynis-report.txt ] || [ -f ~/lynis-final.log ]; then
    pass "Lynis отчёт найден"
else
    warn "Lynis отчёт НЕ найден (рекомендуется сохранить)"
fi

if [ -f ~/nmap-final.txt ] || ls ~/nmap-*.txt &> /dev/null; then
    pass "Nmap отчёт найден"
else
    warn "Nmap отчёт НЕ найден (рекомендуется сохранить)"
fi

echo

# Test 5: Security checks
echo "Test 5: Базовые проверки безопасности"
echo "-------------------------------------------"

# Check SSH root login
if grep -q "^PermitRootLogin no" /etc/ssh/sshd_config 2>/dev/null; then
    pass "SSH root login отключен (хорошо!)"
elif grep -q "^PermitRootLogin yes" /etc/ssh/sshd_config 2>/dev/null; then
    warn "SSH root login ВКЛЮЧЕН (рекомендуется отключить)"
else
    warn "SSH root login настройка не найдена"
fi

# Check for unattended-upgrades
if dpkg -l | grep -q unattended-upgrades; then
    pass "unattended-upgrades установлен (автообновления)"
else
    warn "unattended-upgrades НЕ установлен (рекомендуется)"
fi

echo

# Summary
echo "============================================"
echo "Результаты тестов"
echo "============================================"
echo -e "${GREEN}Passed:${NC} $PASSED"
echo -e "${RED}Failed:${NC} $FAILED"
echo

if [ $FAILED -eq 0 ]; then
    echo -e "${GREEN}✓ Все критичные тесты пройдены!${NC}"
    echo
    echo "Следующие шаги:"
    echo "1. Просмотрите ваш audit-report.md"
    echo "2. Убедитесь что все critical проблемы исправлены"
    echo "3. Настройте continuous monitoring (AIDE timer, fail2ban)"
    echo "4. Переходите к Episode 18!"
    exit 0
else
    echo -e "${RED}✗ Некоторые тесты не прошли${NC}"
    echo
    echo "Исправьте проблемы и запустите тесты снова:"
    echo "sudo ./tests/test.sh"
    exit 1
fi


